module Datadog
  module Loggers
    class JSONFormatter < Logger::Formatter
      def self.call: (untyped severity, untyped datetime, untyped progname, untyped msg) ?{ (untyped) -> untyped } -> ::String

      def self.base_log_hash: (untyped severity, untyped datetime, untyped progname) -> { dd: untyped, timestamp: untyped, severity: untyped, progname: untyped }

      def self.formatter_for: (untyped msg) -> untyped

      def self.correlation_hash: () -> { trace_id: untyped, span_id: untyped, env: untyped, service: untyped, version: untyped }

      class HashFormatter
        def self.format: (untyped log_hash, untyped msg) -> untyped
      end

      class ExceptionFormatter
        def self.format: (untyped log_hash, untyped exception) -> untyped
      end

      class StringFormatter
        def self.format: (untyped log_hash, untyped msg) -> untyped
      end

      class DefaultFormatter
        def self.format: (untyped log_hash, untyped msg) -> untyped
      end
    end
  end
end
